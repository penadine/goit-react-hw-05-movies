{"version":3,"file":"static/js/530.874e37bf.chunk.js","mappings":"0NACA,GAAgB,UAAY,0BAA0B,UAAY,2B,SCkElE,EA9De,WAAO,IAAD,EAInB,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAY,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAElD,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAASF,GAA7C,eAAOK,EAAP,KAAmBC,EAAnB,MAEAC,EAAAA,EAAAA,YAAU,WACJF,GACFG,EAAAA,EAAAA,IAAA,UAXa,+BAWb,+BACyCH,EADzC,oBAZY,qCAcTI,MAAK,SAAAC,GACJN,EAAUM,EAASC,KAAKC,QACzB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAM,uJAAgCA,EAC/C,GAEN,GAAE,CAACT,IAEJ,IAOMW,EAAmB,WACvBC,eAAeC,QAAQ,YAAab,EACrC,EAED,OACE,iBAAKc,UAAWC,EAAAA,UAAhB,WACE,iBAAKD,UAAWC,EAAAA,UAAhB,WACE,kBACEC,KAAK,OACLC,MAAOjB,EACPkB,SAjBkB,SAAAC,GACxBlB,EAAckB,EAAIC,OAAOH,MAC1B,EAgBOI,YAAY,2BAEd,mBAAQC,QAjBO,WAEnB5B,EADkC,KAAfM,EAAoB,CAAEuB,MAAOvB,GAAe,CAAC,EAEjE,EAcK,wBAEF,eAAIc,UAAWC,EAAAA,WAAf,SACGjB,EAAO0B,KAAI,SAAAC,GAAK,OACf,eAAmBX,UAAWC,EAAAA,UAA9B,UACE,SAAC,KAAD,CACEW,GAAI,CAAEC,SAAS,WAAD,OAAaF,EAAMG,KACjCN,QAASX,EAFX,SAIGc,EAAMI,SALFJ,EAAMG,GADA,QAaxB,C","sources":["webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__hb-lD\",\"searchBar\":\"Movies_searchBar__iJJq5\"};","import React, { useState, useEffect } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './Movies.module.css';\n\nconst Movies = () => {\n  const API_KEY = '4eb4e6539dc3b8035d2876c8ff1613bb';\n  const BASE_URL = 'https://api.themoviedb.org/3';\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const currentQuery = searchParams.get('query') ?? '';\n\n  const [movies, setMovies] = useState([]);\n  const [inputQuery, setInputQuery] = useState(currentQuery);\n\n  useEffect(() => {\n    if (inputQuery) {\n      axios\n        .get(`${BASE_URL}/search/movie?query=${inputQuery}&api_key=${API_KEY}`)\n        .then(response => {\n          setMovies(response.data.results);\n        })\n        .catch(error => {\n          console.error('Ошибка при получении данных:', error);\n        });\n    }\n  }, [inputQuery]);\n\n  const updateQueryString = evt => {\n    setInputQuery(evt.target.value);\n  };\n  const handleSearch = () => {\n    const nextParams = inputQuery !== '' ? { query: inputQuery } : {};\n    setSearchParams(nextParams);\n  };\n  const handleMovieClick = () => {\n    sessionStorage.setItem('lastQuery', inputQuery);\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.searchBar}>\n        <input\n          type=\"text\"\n          value={inputQuery}\n          onChange={updateQueryString}\n          placeholder=\"Search for a movie...\"\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n      <ul className={styles.moviesList}>\n        {movies.map(movie => (\n          <li key={movie.id} className={styles.movieItem}>\n            <Link\n              to={{ pathname: `/movies/${movie.id}` }}\n              onClick={handleMovieClick}\n            >\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useSearchParams","searchParams","setSearchParams","currentQuery","get","useState","movies","setMovies","inputQuery","setInputQuery","useEffect","axios","then","response","data","results","catch","error","console","handleMovieClick","sessionStorage","setItem","className","styles","type","value","onChange","evt","target","placeholder","onClick","query","map","movie","to","pathname","id","title"],"sourceRoot":""}